// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.4.1
// Schema file: Configuration.xsd
// Creation Date: 5/20/2007 11:57:12 AM
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace iCodeGenerator.ConfigurationManager
{

	public struct Declarations
	{
		public const string SchemaVersion = "http://icodegenerator.net/Configuration.xsd";
	}


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class SqlTypeCollection : ArrayList
	{
		public SqlType Add(SqlType obj)
		{
			base.Add(obj);
			return obj;
		}

		public SqlType Add()
		{
			return Add(new SqlType());
		}

		public void Insert(int index, SqlType obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(SqlType obj)
		{
			base.Remove(obj);
		}

		new public SqlType this[int index]
		{
			get { return (SqlType) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class DataTypesCollection : ArrayList
	{
		public DataTypes Add(DataTypes obj)
		{
			base.Add(obj);
			return obj;
		}

		public DataTypes Add()
		{
			return Add(new DataTypes());
		}

		public void Insert(int index, DataTypes obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(DataTypes obj)
		{
			base.Remove(obj);
		}

		new public DataTypes this[int index]
		{
			get { return (DataTypes) base[index]; }
			set { base[index] = value; }
		}
	}



	[XmlRoot(ElementName="Configuration",Namespace=Declarations.SchemaVersion,IsNullable=false),Serializable]
	public class ConfigFile
	{

		[XmlElement(ElementName="StartTag",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __StartTag;
		
		[XmlIgnore]
		public string StartTag
		{ 
			get { return __StartTag; }
			set { __StartTag = value; }
		}

		[XmlElement(ElementName="EndTag",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __EndTag;
		
		[XmlIgnore]
		public string EndTag
		{ 
			get { return __EndTag; }
			set { __EndTag = value; }
		}

		[XmlElement(Type=typeof(DataTypes),ElementName="DataTypes",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public DataTypesCollection __DataTypesCollection;
		
		[XmlIgnore]
		public DataTypesCollection DataTypesCollection
		{
			get
			{
				if (__DataTypesCollection == null) __DataTypesCollection = new DataTypesCollection();
				return __DataTypesCollection;
			}
			set {__DataTypesCollection = value;}
		}

		public ConfigFile()
		{
		}
	}


	[XmlType(TypeName="DataTypes",Namespace=Declarations.SchemaVersion),Serializable]
	public class DataTypes
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return SqlTypeCollection.GetEnumerator();
		}

		public SqlType Add(SqlType obj)
		{
			return SqlTypeCollection.Add(obj);
		}

		[XmlIgnore]
		public SqlType this[int index]
		{
			get { return (SqlType) SqlTypeCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return SqlTypeCollection.Count; }
        }

        public void Clear()
		{
			SqlTypeCollection.Clear();
        }

		public SqlType Remove(int index) 
		{ 
            SqlType obj = SqlTypeCollection[index];
            SqlTypeCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            SqlTypeCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(SqlType),ElementName="SqlType",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public SqlTypeCollection __SqlTypeCollection;
		
		[XmlIgnore]
		public SqlTypeCollection SqlTypeCollection
		{
			get
			{
				if (__SqlTypeCollection == null) __SqlTypeCollection = new SqlTypeCollection();
				return __SqlTypeCollection;
			}
			set {__SqlTypeCollection = value;}
		}

		public DataTypes()
		{
		}
	}


	[XmlType(TypeName="SqlType",Namespace=Declarations.SchemaVersion),Serializable]
	public class SqlType
	{

		[XmlElement(ElementName="name",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __name;
		
		[XmlIgnore]
		public string name
		{ 
			get { return __name; }
			set { __name = value; }
		}

		[XmlElement(ElementName="value",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __value;
		
		[XmlIgnore]
		public string @value
		{ 
			get { return __value; }
			set { __value = value; }
		}

		public SqlType()
		{
		}
	}
}
